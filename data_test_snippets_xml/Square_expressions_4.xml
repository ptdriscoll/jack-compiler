<subroutineDec>
  <keyword> function </keyword>
  <keyword> void </keyword>
  <identifier> test </identifier>
  <symbol> ( </symbol>
  <parameterList>
  </parameterList>
  <symbol> ) </symbol>
  <subroutineBody>
    <symbol> { </symbol>
    <statements>
      <ifStatement>
        <keyword> if </keyword>
        <symbol> ( </symbol>
        <expression>
          <term>
            <symbol> ( </symbol>
            <expression>
              <term>
                <symbol> ( </symbol>
                <expression>
                  <term>
                    <identifier> y </identifier>
                  </term>
                  <symbol> + </symbol>
                  <term>
                    <identifier> size </identifier>
                  </term>
                </expression>
                <symbol> ) </symbol>
              </term>
              <symbol> &lt; </symbol>
              <term>
                <integerConstant> 254 </integerConstant>
              </term>
            </expression>
            <symbol> ) </symbol>
          </term>
          <symbol> &amp; </symbol>
          <term>
            <symbol> ( </symbol>
            <expression>
              <term>
                <symbol> ( </symbol>
                <expression>
                  <term>
                    <identifier> x </identifier>
                  </term>
                  <symbol> + </symbol>
                  <term>
                    <identifier> size </identifier>
                  </term>
                </expression>
                <symbol> ) </symbol>
              </term>
              <symbol> &lt; </symbol>
              <term>
                <integerConstant> 510 </integerConstant>
              </term>
            </expression>
            <symbol> ) </symbol>
          </term>
        </expression>
        <symbol> ) </symbol>
        <symbol> { </symbol>
        <statements>
          <doStatement>
            <keyword> do </keyword>
            <identifier> erase </identifier>
            <symbol> ( </symbol>
            <expressionList>
            </expressionList>
            <symbol> ) </symbol>
            <symbol> ; </symbol>
          </doStatement>
          <letStatement>
            <keyword> let </keyword>
            <identifier> size </identifier>
            <symbol> = </symbol>
            <expression>
              <term>
                <identifier> size </identifier>
              </term>
              <symbol> + </symbol>
              <term>
                <integerConstant> 2 </integerConstant>
              </term>
            </expression>
            <symbol> ; </symbol>
          </letStatement>
          <doStatement>
            <keyword> do </keyword>
            <identifier> draw </identifier>
            <symbol> ( </symbol>
            <expressionList>
            </expressionList>
            <symbol> ) </symbol>
            <symbol> ; </symbol>
          </doStatement>
        </statements>
        <symbol> } </symbol>
      </ifStatement>
      <returnStatement>
        <keyword> return </keyword>
        <symbol> ; </symbol>
      </returnStatement>
    </statements>
    <symbol> } </symbol>
  </subroutineBody>
</subroutineDec>
